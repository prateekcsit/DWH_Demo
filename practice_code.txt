drop table customer CASCADE CONSTRAINTS;
drop table flight CASCADE CONSTRAINTS;
drop table booking CASCADE CONSTRAINTS;

create table customer(
custid varchar2(5) primary key check(custid like 'C%'),
custname varchar2(10));

create table flight(
flightid varchar2(5) primary key check (flightid like 'F%'),
flightname varchar2(15),
flighttype varchar2(20) check (flighttype in ('Domestic','International')),
source varchar2(15),
destination varchar2(15)
);

Alter table flight modify flightname varchar2(20);

create table booking(
bookingid number primary key,
flightid varchar2(5) references flight(flightid),
custid varchar2(5) references customer(custid),
travelclass varchar2(30) check(travelclass in('Business','Economy')),
flightcharge number,
bookingdate date
);

insert into customer values('C301','John');
insert into customer values('C302','Sam');
insert into customer values('C303','Robert');
insert into customer values('C304','Albert');
insert into customer values('C305','Jack');

insert into flight values('F101','Spice Jet Airlines','Domestic','Mumbai','Kolkata');
insert into flight values('F102','Indian Airlines','International','Delhi','Germany');
insert into flight values('F103','Deccan Airlines','Domestic','Chennai','Bengaluru');
insert into flight values('F104','British Airways','International','London','Italy');
insert into flight values('F105','Swiss Airlines','International','Zurich','Spain');


insert into booking values(201,'F101','C301','Business',12000,'22-Mar-18');
insert into booking values(202,'F105','C303','Business',30000,'17-May-18');
insert into booking values(203,'F103','C302','Economy',3000,'23-Jun-18');
insert into booking values(204,'F101','C302','Economy',10000,'12-Oct-18');
insert into booking values(205,'F104','C303','Business',25000,'16-Jan-19');
insert into booking values(206,'F105','C301','Business',30000,'22-Jan-19');
insert into booking values(207,'F104','C304','Economy',22000,'16-Feb-19');
insert into booking values(208,'F101','C304','Business',12000,'18-Sep-19');


select * from customer;
select * from flight;
select * from booking;

Write SQL queries to the problem statements given below based on the scenario and details provided on the previous page.
Requirement 1 : 
Identify the customer(s) who have paid the highest flightcharge for the travel class economy. Write a SQL query to display id and name of the identified customers.
Requirement 2 : 
Identify the international flight(s) which are booked the maximum number of times. Write a SQL query to display id and name of the identified flights.
Requirement 3 :
Identify the customer(s) who have paid overall total flightcharge less than the average flightcharge of all bookings belonging to travel class ‘Business’. Write a SQL query to display id and name of the identified customers.
Requirement 4 :
Identify the booking(s) done for travel class ‘Business’ by the customers having letter ‘e’ anywhere in their name, for the flights other than ‘Domestic’ flights. Write a SQL query to display booking id, flight’s id and customer’s id of the identified bookings.
Requirement 5 :
Identify the booking(s) which have flight charges paid is less than the average flight charge for all flight ticket bookings belonging to the same flight type. Write a SQL query to display booking id, source city, destination city and booking date of the identified bookings.

Requirement 6 :
Identify the customer(s) who have paid flight charge more than the average flight charge of all other customers, who have booked the flight tickets for the same travel class. Write a SQL query to display id and name of the identified customers.
Requirement 7 :
Identify the customer(s) who have booked tickets for both international and domestic flights. Write a SQL query to display the name of the identified customers.
Requirement 8 :
Display flight’s id of the booked flight tickets, which fulfills EITHER of these requirements:
•	Flight’s id of the booked flight tickets that are booked for the maximum number of times for the travel class ‘Business’
•	The total flight charge of a flight id of booked flight tickets is more than the average flight charge of all bookings done for the same flight for travel class ‘Economy’.


Exercise 1
Get all the employees who is making more than average salary with in each department.
•	Use HR database employees and department tables for this problem.
•	Compute average salary expense for each department and get those employee details who are making more salary than average salary.
•	Make sure average salary expense per department is rounded off to 2 decimals.
•	Output should contain employee_id, department_name, salary and avg_salary_expense (derived field).
•	Data should be sorted in ascending order by department_id and descending order by salary.

Exercise 2
Get cumulative salary with in each department for Finance and IT department along with department name.
•	Use HR database employees and department tables for this problem.
•	Compute cumulative salary expense for Finance as well as IT departments with in respective departments.
•	Make sure cumulative salary expense per department is rounded off to 2 decimals.
•	Output should contain employee_id, department_name, salary and cum_salary_expense (derived field).
•	Data should be sorted in ascending order by department_name and then salary.

Exercise 3
Get top 3 paid employees with in each department by salary (use dense_rank)
•	Use HR database employees and department tables for this problem.
•	Highest paid employee should be ranked first.
•	Output should contain employee_id, department_id, department_name, salary and employee_rank (derived field).
•	Data should be sorted in ascending order by department_id in ascending order and then salary in descending order.




